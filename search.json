[{"path":"https://ropengov.github.io/noaa/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steph Buongiorno. Author, maintainer.","code":""},{"path":"https://ropengov.github.io/noaa/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buongiorno S (2025). noaa: Access National Aeronautics Space Administration (NASA) Open APIs Space Earth Data. R package version 1.0.0, https://api.nasa.gov.","code":"@Manual{,   title = {noaa: Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data},   author = {Steph Buongiorno},   year = {2025},   note = {R package version 1.0.0},   url = {https://api.nasa.gov}, }"},{"path":"https://ropengov.github.io/noaa/index.html","id":"noaa-accessing-current-and-historic-weather-data-by-noaa","dir":"","previous_headings":"","what":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"National Oceanic Atmospheric Administration (NOAA) maintains one largest climate data archives, National Climatic Data Center (NCDC). NCDC’s Climate Data Online (CDO) offers web services provide access weather climate data, include (limited ) minimum maximum temperature different zip codes date, amount precipitation, longitude latitude stations, . known R package enables user search historical weather data zip code.","code":""},{"path":"https://ropengov.github.io/noaa/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"Install CRAN: Install rOpenGov:","code":"install.packages(\"noaa\") options(repos = c(     ropengov = \"https://ropengov.r-universe.dev\",     CRAN = \"https://cloud.r-project.org\"))  install.packages(\"noaa\")"},{"path":"https://ropengov.github.io/noaa/index.html","id":"authentication-token","dir":"","previous_headings":"","what":"Authentication Token","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"Accessing CDO data requires token. Get token going www.ncdc.noaa.gov/cdo-web/token entering email address.","code":""},{"path":[]},{"path":"https://ropengov.github.io/noaa/index.html","id":"get_climate_data","dir":"","previous_headings":"","what":"get_climate_data()","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"get_climate_data() function allows retrieve climate weather data NOAA Climate Data Online (CDO) API wide range dataset types. supports pagination can retrieve large numbers records iteratively querying API.","code":"get_climate_data(noaa_token, datasetid, stationid = NULL, locationid = NULL, startdate, enddate, n_results = Inf)"},{"path":"https://ropengov.github.io/noaa/index.html","id":"arguments","dir":"","previous_headings":"","what":"Arguments","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"Supported Dataset IDs: function currently supports following datasets: GHCND – Daily summaries GSOM – Monthly summaries GSOY – Yearly summaries NEXRAD2, NEXRAD3 – Radar data NORMAL_DLY, NORMAL_MLY, ANN, ANNUAL – Climate normals PRECIP_15, PRECIP_HLY – Precipitation data ISD – Integrated Surface Data CLIMDIV – Climate division data CPC – Climate Prediction Center data LCD – Local Climatological Data AGRMET – Agricultural Meteorological data STORM_EVENTS – Storm event data Example:","code":"# Example: Get daily precipitation for Central Park, NY in January 2020 df <- get_climate_data(   noaa_token = \"YOUR_API_KEY\",   datasetid = \"GHCND\",   stationid = \"USW00094728\",   startdate = \"2020-01-01\",   enddate = \"2020-01-31\",   n_results = 1000 )"},{"path":"https://ropengov.github.io/noaa/index.html","id":"get_locationid","dir":"","previous_headings":"","what":"get_locationid()","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"get_locationid() function retrieves location identifiers NOAA Climate Data Online (CDO) API based specified category. supports pagination return large sets location data.","code":"get_locationid(noaa_token, category_id, n_results = Inf)"},{"path":"https://ropengov.github.io/noaa/index.html","id":"arguments-1","dir":"","previous_headings":"","what":"Arguments","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"Supported Location Category IDs: function supports following location categories: ST – U.S. States territories (e.g., \"ST:TX\" Texas) CITY – Major U.S. cities weather stations COUNTY – U.S. counties (e.g., \"COUNTY:US36061\" New York County, NY) ZIP – ZIP Code areas CLIM_REG – NOAA-defined climate regions (e.g., Southeast, Midwest) HYDROL_REG – Hydrologic regions used water resource planning FIPS – Federal Information Processing Standards codes (e.g., \"FIPS:37\" North Carolina) Example: Returns: data frame containing location metadata specified category. results returned request fails, error thrown empty data frame returned.","code":"# Example: Retrieve a list of U.S. states df <- get_locationid(   noaa_token = \"YOUR_API_KEY\",   category_id = \"ST\",   n_results = 100 )"},{"path":"https://ropengov.github.io/noaa/index.html","id":"get_stationid","dir":"","previous_headings":"","what":"get_stationid()","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"get_stationid() function retrieves weather station metadata NOAA Climate Data Online (CDO) API given dataset time range. supports pagination can return large number station records. Function Overview:","code":"get_stationid(noaa_token, datasetid, locationid = NULL, startdate, enddate, n_results = Inf)"},{"path":"https://ropengov.github.io/noaa/index.html","id":"arguments-2","dir":"","previous_headings":"","what":"Arguments","title":"Access National Aeronautics and Space Administration (NASA) Open APIs for Space and Earth Data","text":"Example: Returns: data frame containing weather station metadata, station IDs, names, geographic coordinates, available coverage. results returned request fails, error thrown empty data frame returned. detailed list NOAA acronyms can found : https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt","code":"# Example: Get stations in Texas for the GHCND dataset during 2020 df <- get_stationid(   noaa_token = \"YOUR_API_KEY\",   datasetid = \"GHCND\",   locationid = \"FIPS:48\",   startdate = \"2020-01-01\",   enddate = \"2020-12-31\",   n_results = 1000 )"},{"path":"https://ropengov.github.io/noaa/reference/get_climate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Climate Data from the NOAA API — get_climate_data","title":"Retrieve Climate Data from the NOAA API — get_climate_data","text":"Queries NOAA Climate Data Online (CDO) API retrieve climate data given dataset, station location, date range. Supports automatic pagination collect large datasets.","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_climate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Climate Data from the NOAA API — get_climate_data","text":"","code":"get_climate_data(   noaa_token,   datasetid,   stationid = NULL,   locationid = NULL,   startdate,   enddate,   n_results = Inf )"},{"path":"https://ropengov.github.io/noaa/reference/get_climate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Climate Data from the NOAA API — get_climate_data","text":"noaa_token character string. NOAA API token used authentication. can request token https://www.ncdc.noaa.gov/cdo-web/token. datasetid valid dataset ID (e.g., \"GHCND\", \"GSOM\", \"GSOY\"). Use valid_ids() view supported datasets. stationid Optional. NOAA station ID (e.g., \"GHCND:USW00094728\"). Required station-based datasets. locationid Optional. NOAA location ID (e.g., \"FIPS:37\", \"CITY:US390029\"). Used location-based datasets. startdate Start date (YYYY-MM-DD) query range. enddate End date (YYYY-MM-DD) query range. n_results Maximum number results retrieve. Defaults Inf (available results).","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_climate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Climate Data from the NOAA API — get_climate_data","text":"data frame climate data observations returned NOAA API.","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_climate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Climate Data from the NOAA API — get_climate_data","text":"","code":"if (nzchar(Sys.getenv(\"NOAA_TOKEN\"))) {   # Set your NOAA token   noaa_token <- Sys.getenv(\"NOAA_TOKEN\")    # Example request: Daily summaries from Central Park, NY (GHCND:USW00094728)   data <- get_climate_data(     noaa_token = noaa_token,     datasetid = \"GHCND\",     stationid = \"USW00094728\",     startdate = \"2020-01-01\",     enddate = \"2020-01-31\"   )   head(data) }"},{"path":"https://ropengov.github.io/noaa/reference/get_locationid.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve NOAA Location IDs for a Given Category — get_locationid","title":"Retrieve NOAA Location IDs for a Given Category — get_locationid","text":"Queries NOAA Climate Data Online (CDO) API retrieve location identifiers specified category (e.g., state, city, county).","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_locationid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve NOAA Location IDs for a Given Category — get_locationid","text":"","code":"get_locationid(noaa_token, category_id, n_results = Inf)"},{"path":"https://ropengov.github.io/noaa/reference/get_locationid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve NOAA Location IDs for a Given Category — get_locationid","text":"noaa_token character string. NOAA API token used authentication. can request token https://www.ncdc.noaa.gov/cdo-web/token. category_id valid location category ID. Options: \"ST\", \"CITY\", \"COUNTY\", \"ZIP\", \"CLIM_REG\", \"HYDROL_REG\", \"FIPS\". n_results Maximum number results retrieve. Defaults Inf (results).","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_locationid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve NOAA Location IDs for a Given Category — get_locationid","text":"data frame location IDs matching given category.","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_locationid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve NOAA Location IDs for a Given Category — get_locationid","text":"","code":"if (nzchar(Sys.getenv(\"NOAA_TOKEN\"))) {   # Retrieve token from environment variable   noaa_token <- Sys.getenv(\"NOAA_TOKEN\")    # Get all U.S. state-level location IDs using category \"FIPS\"   locations <- get_locationid(noaa_token = noaa_token, category_id = \"FIPS\")   head(locations) }"},{"path":"https://ropengov.github.io/noaa/reference/get_stationid.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Station IDs for a Given Dataset and Location — get_stationid","title":"Retrieve Station IDs for a Given Dataset and Location — get_stationid","text":"Queries NOAA Climate Data Online (CDO) API retrieve station identifiers associated specified dataset, location, date range.","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_stationid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Station IDs for a Given Dataset and Location — get_stationid","text":"","code":"get_stationid(   noaa_token,   datasetid,   locationid = NULL,   startdate,   enddate,   n_results = Inf )"},{"path":"https://ropengov.github.io/noaa/reference/get_stationid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Station IDs for a Given Dataset and Location — get_stationid","text":"noaa_token character string. NOAA API token used authentication. can request token https://www.ncdc.noaa.gov/cdo-web/token. datasetid valid dataset ID (e.g., \"GHCND\", \"GSOM\", etc.). Use valid_ids() see supported values. locationid Optional. valid location ID (e.g., \"FIPS:37\", \"CITY:US390029\"). NULL, locations considered. startdate Start date (YYYY-MM-DD) station data coverage. enddate End date (YYYY-MM-DD) station data coverage. n_results Maximum number station results retrieve. Defaults Inf fetch available.","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_stationid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Station IDs for a Given Dataset and Location — get_stationid","text":"data frame containing metadata matching NOAA stations.","code":""},{"path":"https://ropengov.github.io/noaa/reference/get_stationid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Station IDs for a Given Dataset and Location — get_stationid","text":"","code":"if (nzchar(Sys.getenv(\"NOAA_TOKEN\"))) {   # Retrieve your NOAA API token from environment   noaa_token <- Sys.getenv(\"NOAA_TOKEN\")    # Get stations for the GHCND dataset in Texas between 2020-01-01 and 2020-12-31   stations <- get_stationid(     noaa_token = noaa_token,     datasetid = \"GHCND\",     locationid = \"FIPS:48\",     startdate = \"2020-01-01\",     enddate = \"2020-12-31\"   )   head(stations) }"}]
